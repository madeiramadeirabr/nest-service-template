on: [push]
name: Test
env:
  MY_NAME: testUser
jobs:
  description_jira:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          node-version: '14.x'
      - run: npm install      
      - name: Get description from of task on JiraSoftware
        id: request
        uses: fjogeleit/http-request-action@master
        with:
          url: https://madeiramadeira.atlassian.net/rest/api/2/issue/SRE-310?fields=description
          method: GET
          username: lucas.villatore@madeiramadeira.com.br
          password: ${{ secrets.JIRA_API_TOKEN }}
          headers:  'accept: application/json'
      # - name: Get Description Jira
      #   shell: pwsh
      #   run: |
      #     $output = '${{ steps.request.outputs.response }}' | ConvertFrom-Json
      #     Write-Host $($output)
      # - name: Generate release notes on GitHub
      #   uses: fjogeleit/http-request-action@master
      #   with:
      #     url: 'https://api.github.com/repos/lucasvillatore/git-actions-code-dojo/releases'
      #     method: 'POST'
      #     data: '{"tag_name": "release-1.0.1","body": "${{ steps.output }}"}'
      #     bearerToken: '${{ secrets.GIT_TOKEN }}'
        - name: set output
        id: set
        run: |
          echo ::set-output name=json_var::'[{ "name": "test", "client_payload": "111" }, { "name": "test2", "client_payload": "222" }] '
        - name: use output
          run: |
            echo $json_var | jq '.[].name'
          env:
            json_var: ${{ steps.set.outputs.json_var}}
