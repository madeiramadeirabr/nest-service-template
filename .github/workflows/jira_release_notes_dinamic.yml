name: Jira CI
on: 
  push:
    branches:
      - main
      - production
      - master
      - feature/github-actions-config
      - SRE-310_teste
jobs:  
  transition-issue:
    name: Branch Issue
    runs-on: ubuntu-latest
    steps:
    - name: Extract branch name
      run: echo "##[set-output name=branch;]$(echo ${{github.event.ref}} | awk -F/ '{print $NF}')"
      shell: bash
      id: get_branch_name
    - name: Extract id jira task
      run: echo "##[set-output name=jira_task;]$(echo ${{steps.get_branch_name.outputs.branch }} | awk '{split($0,a,"_"); print a[1]}')"
      shell: bash
      id: get_id_jira_task_name
    - name: get_id_jira_task_name
      run:   echo '${{ toJSON(steps.get_id_jira_task_name.outputs.jira_task) }}'
    - name: Get object from JiraSoftware
      id: request
      uses: fjogeleit/http-request-action@master
      with:
      # Pegamos o nome dinamico ele está no arquivo jira_name_branch.yml, agora só precisamos pegar a descrição dinamicamente
        url: https://madeiramadeira.atlassian.net/rest/api/2/issue/SRE-310?fields=description
        method: GET
        username: lucas.villatore@madeiramadeira.com.br
        password: ${{ secrets.JIRA_API_TOKEN }}
        headers:  'accept: application/json'
    - name: Get description from task on JiraSoftware
      id: jira
      shell: pwsh
      run: |
        $output = '${{ steps.request.outputs.response }}'
        $description = $(echo $output | jq -r '.fields.description')
        echo "::set-output name=DESCRIPTION::$description"
    - name: Generate release notes on GitHub
      uses: fjogeleit/http-request-action@master
      with:
        url: 'https://api.github.com/repos/lucasvillatore/git-actions-code-dojo/releases'
        method: 'POST'
        data: '{"tag_name": "release-2.1.0","body": "${{steps.jira.outputs.DESCRIPTION}}"}'
        bearerToken: '${{ secrets.GIT_TOKEN }}' 