name: Node.js CI
on: 
  push:
    branches: 
      - feature/ci

jobs:
  build:
    name: Npm install & build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - run: npm ci
    - run: npm run build --if-present

  checkLint:
    needs: build
    name: Npm checkLint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: npm install && npm run lint


  teste-unitario: 
    needs: checkLint
    name: Npm unitary test
    runs-on: ubuntu-latest
    environment: unit_test
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - run: npm install && npm run test 
    
  coverage: 
    needs: teste-unitario
    name: Npm coverage
    runs-on: ubuntu-latest
    environment: coverage
    steps:
    - uses: actions/checkout@v2
    - run: npm install && npm run test:covz
  
  changelog:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: changelog
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: dependencys
        run: yarn install
        
      - name: setting git
        run: |
          git config --local user.email ${{ secrets.MY_EMAIL}}
          git config --local user.name ${{ secrets.MY_USER }}         
      
      - name: update version
        run: npm version patch
        
      - name: install auto-changelog
        run: yarn add auto-changelog --dev

      - name: generate changelog
        run: yarn auto-changelog -p
      
      - name: write changelog on CHANGELOG.md
        run: echo "${{ steps.release.outputs.changelog }}"  >> CHANGELOG.md
        
      - name: Commit CHANGELOG.md
        run: |          
          git add .
          git commit -m "ci: generate changelog"
      - name: Push changelog
        uses: ad-m/github-push-action@master
        with:
          branch: feature/ci
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          
  # sonarcloud:
  #   needs: coverage
  #   name: Sonarcloud scan
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0
  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@master
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
